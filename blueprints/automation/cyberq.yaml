blueprint:
  name: CyberQ Alerts
  domain: automation
  source_url: https://github.com/jchonig/ha_cyberq/blob/main/blueprints/automation/cyberq.yaml
  description: |
    Notify on state transitions of CyberQ pit and food probes.
  input:
    cyberq_device:
      name: CyberQ Device
      selector:
        device:
          integration: cyberq
          multiple: true
    notify_device:
      name: Notification Device
      description: |
        The Device running the official Home Assistant app  to receive
        notifications.
      default: false
      selector:
        device:
          integration: mobile_app
          multiple: true

variables:
  cyberq_device: !input cyberq_device
  cyberq_pit_status_list:
    - 'high'
    - 'low'
    - 'error'
    - 'alarm'
  cyberq_pit_status_entity: "{{ device_entities(cyberq_device) | select('search','^sensor\\.cyberq_([0-9a-f]+)_pit_status') | first }}"
  cyberq_probe_status_list:
    - 'high'
    - 'low'
    - 'done'
    - 'error'
    - 'alarm'
  cyberq_probe1_status_entity: "{{ device_entities(cyberq_device) | select('search','^sensor\\.cyberq_([0-9a-f]+)_probe1_status') | first }}"
  cyberq_probe2_status_entity: "{{ device_entities(cyberq_device) | select('search','^sensor\\.cyberq_([0-9a-f]+)_probe2_status') | first }}"
  cyberq_probe3_status_entity: "{{ device_entities(cyberq_device) | select('search','^sensor\\.cyberq_([0-9a-f]+)_probe3_status') | first }}"

alias: "Cyberq Probe Status"
description: "Trigger based on probe status state"
trigger:
  - platform: state
    id: pit_status
    entity_id: "{{ cyberq_pit_status_entity }}"
    to: "{{ cyberq_pit_status_list }}"
  - platform: state
    id: probe_status
    entity_id:
      - "{{ cyberq_probe1_status_entity }}"
      - "{{ cyberq_probe2_status_entity }}"
      - "{{ cyberq_probe3_status_entity }}"
    to: "{{ cyberq_prob_status_list }}"

action:
  - alias: "Persistant Notification"
    action: persistent_notification.create
    data:
      title: "{{ trigger.to_state.name }}"
      message: "State change from {{ trigger.from_state }} to {{ trigger.to_state }}"
  - alias: "Send Notification"
    device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: "{{ trigger.to_state.name }}"
    message: "State change from {{ trigger.from_state }} to {{ trigger.to_state }}"
    data:
      visibility: public
      group: CyberQ
      push:
        thread-id: CyberQ
